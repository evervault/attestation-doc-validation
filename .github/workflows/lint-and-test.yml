on:
  push:
    paths:
      - attestation-doc-validation/**
      - node-attestation-bindings/**
      - python-attestation-bindings/**
      - .github/workflows/lint-and-test.yml
      - test-data/**
      - test-specs/**
name: Lint and Test
jobs:
  lint_and_test_rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.79.0
          override: true
          components: rustfmt, clippy
      - uses: davidB/rust-cargo-make@10579dcff82285736fad5291533b52d3c93d6b3b
      - name: Run CI Tasks with backtrace
        working-directory: attestation-doc-validation
        run: cargo make ci
        env:
          RUST_BACKTRACE: full
  lint_and_test_node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true
          cache: yarn
          cache-dependency-path: ./node-attestation-bindings/yarn.lock
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.79.0
          override: true
          components: rustfmt, clippy
      - uses: davidB/rust-cargo-make@10579dcff82285736fad5291533b52d3c93d6b3b
      - name: Install dependencies
        working-directory: node-attestation-bindings
        run: yarn install
      - name: Test node bindings
        working-directory: node-attestation-bindings
        run: cargo make test
  build_and_test_python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist --find-interpreter
          working-directory: python-attestation-bindings
        env:
          PYO3_CROSS_PYTHON_VERSION: '3.9'
      - name: Build and Test
        working-directory: python-attestation-bindings
        run: |-
          python -m pip install --upgrade pip
          python -m venv ./venv
          source ./venv/bin/activate
          pip install pytest
          maturin develop
          sudo apt-get install -y libfaketime
          export FAKETIME="2023-09-18 17:18:00"
          LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1 pytest

